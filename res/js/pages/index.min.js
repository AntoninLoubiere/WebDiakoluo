

/* ################################### list.js ####################################*/

const listPage = document.getElementById('list-page');
const listPageTestList = document.getElementById('test-list');

const testListTemplate = document.getElementById('test-child-template');

function reloadTestList() {
    removeAllChildren(listPageTestList);
    forEachHeader().onsuccess = function(event) {
        var cursor = event.target.result;
        if (cursor) {
            var t = testListTemplate.content.cloneNode(true);
            var v = cursor.value;
            var id = cursor.value.id;
            t.querySelector('.test-title').textContent = v.title;
            t.querySelector('.test-description').textContent = v.description;
            t.children[0].onclick = function() {
                const url = new URL(window.location);
                url.searchParams.set('page', 'view');
                url.searchParams.set('test', id);
                window.history.pushState({}, 'View page', url);
                loadPage();
            }
            listPageTestList.appendChild(t);
            cursor.continue();
        }
    };
}

function loadListPage() {
    currentPage = listPage;
    currentPage.classList.remove('hide');
    updatePageTitle('title-index.html');
    reloadTestList();
}

/* ################################### main.js ####################################*/

const MAIN_URL = "/WebDiakoluo/index.html"

var currentPage = null;
var currentTest = null;

/* init navigation */
function initNavigation() {
    window.onpopstate = function() {
        loadPage();
    }
    document.getElementById('loading-page').classList.add('hide');
    loadPage();
}

/* load a page / process the ur l*/
function loadPage() {
    const url = new URL(window.location);
    var page = url.searchParams.get('page');
    if (currentPage) {
        currentPage.classList.add('hide');
    }

    if (page == 'view') {
        loadPageRequiringTest(url, page);
    } else {
        loadListPage();
    }
}

/* load a page that require a test */
function loadPageRequiringTest(url, page) {
    var testId = Number(url.searchParams.get('test'));
    if (testId) {
        if (!currentTest || testId != currentTest.id) {
            var request = getFullTest(testId);
            request.onsuccess = function(test) {
                currentTest = test;
                loadPageRequiringTestCallback(page);
            };
            request.onerror = function(event) {
                backToList();
            };
        } else {
            loadPageRequiringTestCallback(page);
        }
    } else {
        backToList();
    }
}

/* callback of the load page requiring test if a test has been imported */
function loadPageRequiringTestCallback(page) {
    if (page == 'view') {
        loadViewPage();
    }
}

/* return to the list if an error occur for example */
function backToList(newState = false) {
    if (newState) {
        window.history.pushState({}, 'Main page', MAIN_URL);
    } else {
        window.history.replaceState({}, 'Main page', MAIN_URL);
    }
    loadPage();
}

testDBCallbacks.push(initNavigation);

/* ################################### view.js ####################################*/

const viewPage = document.getElementById('view-page');

const viewPageTitle = [document.getElementById('test-title'), document.getElementById('test-title2')];
const viewPageDescription = document.getElementById('test-description');
const viewPageCreatedDate = document.getElementById('test-created-date');
const viewPageModificationDate = document.getElementById('test-modification-date');
const viewPageColumnsList = document.getElementById('test-columns');
const viewPageDataTableHeader = document.getElementById('view-test-data-header');
const viewPageDataTableBody = document.getElementById('view-test-data-body');

const columnTemplate = document.getElementById('column-child-template');
const dataTemplate = document.getElementById('data-child-template');

function loadViewPage() {
    currentPage = viewPage;
    for (var i = 0; i < viewPageTitle.length; i++) {
        viewPageTitle[i].textContent = currentTest.title;
    }
    viewPageDescription.textContent = currentTest.description;
    viewPageCreatedDate.textContent = DATE_FORMATER.format(currentTest.createdDate);
    viewPageModificationDate.textContent = DATE_FORMATER.format(currentTest.modificationDate);
    currentPage.classList.remove('hide');

    removeAllChildren(viewPageColumnsList);
    removeAllChildren(viewPageDataTableHeader);
    removeAllChildren(viewPageDataTableBody);
    var e;
    var row = dataTemplate.content.cloneNode(true);
    row.querySelector('.min').innerHTML = '<x-i18n key="view"></x-i18n>';
    for (var i = 0; i < currentTest.columns.length; i++) {
        e = columnTemplate.content.cloneNode(true);
        e.querySelector('.test-column-text').textContent = currentTest.columns[i].name;
        viewPageColumnsList.appendChild(e);

        e = document.createElement('td');
        e.textContent = currentTest.columns[i].name;
        row.children[0].appendChild(e);
    }
    viewPageDataTableHeader.appendChild(row);

    for (var i = 0; i < currentTest.data.length; i++) {
        row = dataTemplate.content.cloneNode(true);
        for (var j = 0; j < currentTest.data[i].length; j++) {
            e = document.createElement('td');
            e.textContent = currentTest.columns[j].getDataValueString(currentTest.data[i][j]);
            row.children[0].appendChild(e);
        }
        viewPageDataTableBody.appendChild(row);
    }

    setPageTitle(currentTest.title);
}